checkomatic:
  client:
    host: https://open-targets-eu-dev.appspot.com
    port: 443
    size: 1000 # max size to fetch when query and it is applicable
  rules:
    targets:
      DMD:
        - |-
          # print('target approved name', o.approved_name)
          output = True
        - o['id'] == 'ENSG00000198947'
    diseases:
      Orphanet_908:
        - o.name == 'Fragile X syndrome'
        - o.association_counts.total > 400
        - o.association_counts.direct > 400
      Orphanet_273:
        - o.name == 'Steinert myotonic dystrophy'
      Orphanet_93256:
        - o.name == 'Fragile X-associated tremor/ataxia syndrome'
    associations:
      # these (targets and diseases) use dataframes (t) instead addict.Dict object (o)
      # those are easier to manipulate and filter by
      targets:
        PRDX1:
          # execute a block of python code
          - |-
            # print('num assciations', t['id'].shape)
            # print('num columns per association', len(t.columns.tolist()))
            output = True
        DMD:
          # is Duchenne muscular dystrophy there?
          - (t[t['disease.id'] == 'Orphanet_98896']).shape[0] > 0
        CD86:
          # is multiple sclerosis in the list?
          - (t[t['disease.id'] == 'EFO_0003885']).shape[0] > 0
        ITGAL:
          # IBD in the list
          - (t[t['disease.id'] == 'EFO_0003767']).shape[0] > 0
      diseases:
        Orphanet_93256:
          - |-
            # print('num assciations', t['id'].count())
            # print('num columns per association', len(t.columns.tolist()))
            output = True
        EFO_0003767:
          # NOD2, IL10RA, IL23R, ITGAL in IBD
          - t[t['target.gene_info.symbol'].isin(['NOD2', 'IL10RA', 'ITGAL'])].shape[0] == 3
        EFO_0000384:
          # TNF, PTGS2, PTGS1 in crohns disease
          - t[t['target.gene_info.symbol'].isin(['TNF', 'PTGS2', 'PTGS1'])].shape[0] == 3
        EFO_0000249:
          # APP, SORL1, ABCA7, ADAM10 in alzheimers disease
          - t[t['target.gene_info.symbol'].isin(['APP', 'SORL1', 'ABCA7', 'ADAM10'])].shape[0] == 4
        Orphanet_399:
          # huntington disease
          - t[t['target.gene_info.symbol'] == 'HTT'].shape[0] == 1
#    evidences:
#      # these (evidences) use dataframes (t) instead addict.Dict object (o)
#      # those are easier to manipulate and filter by
#      # check for Should have literature, drugs, animal models and
#      # at least 1 piece of genetic evidence (i.e. trinucleotide expansions from ClinVar) for HTT.
#      ENSG00000197386-Orphanet_399:
#    search:
#      "asdf sdf":
    stats:
      - o.data_version == "18.12"
      - o.targets.total > 28000 and o.targets.total < 50000
      - o.diseases.total > 10000 and o.diseases.total < 20000
      - len(o.associations.datatypes.keys()) == 7
      - ('sysbio' in o.associations.datatypes.affected_pathway.datasources)
      - |-
        dts = o.associations.datatypes.keys()
        dss = []
        for dt in dts:
          dss += o.associations.datatypes[dt].datasources.keys()
        output = len(dss) == 19
